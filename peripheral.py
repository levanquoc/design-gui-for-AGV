#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.5
#  in conjunction with Tcl version 8.6
#    Nov 03, 2020 09:06:53 AM +07  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import peripheral_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = PERIPHERAL (root)
    peripheral_support.init(root, top)
    root.mainloop()

w = None
def create_PERIPHERAL(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_PERIPHERAL(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = PERIPHERAL (w)
    peripheral_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_PERIPHERAL():
    global w
    w.destroy()
    w = None

class PERIPHERAL:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("735x455+80+21")
        top.minsize(1, 1)
        top.maxsize(785, 450)
        top.resizable(1,  1)
        top.title("PERIPHERAL")
        top.configure(background="#FBEAEB")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.linestatusLabelframe = tk.LabelFrame(top)
        self.linestatusLabelframe.place(relx=0.068, rely=0.088, relheight=0.363
                , relwidth=0.546)
        self.linestatusLabelframe.configure(relief='groove')
        self.linestatusLabelframe.configure(font="-family {DejaVu Sans} -size 13")
        self.linestatusLabelframe.configure(foreground="#ffffff")
        self.linestatusLabelframe.configure(text='''LINE STATUS''')
        self.linestatusLabelframe.configure(background="#4a171e")

        self.led1Front = tk.Label(self.linestatusLabelframe)
        self.led1Front.place(relx=0.202, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.led1Front.configure(activebackground="#f9f9f9")

        self.led2Front = tk.Label(self.linestatusLabelframe)
        self.led2Front.place(relx=0.289, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.led2Front.configure(activebackground="#f9f9f9")

        self.led3Front = tk.Label(self.linestatusLabelframe)
        self.led3Front.place(relx=0.379, rely=0.242, height=26, width=30
                , bordermode='ignore')
        self.led3Front.configure(activebackground="#f9f9f9")

        self.led4Front = tk.Label(self.linestatusLabelframe)
        self.led4Front.place(relx=0.469, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.led4Front.configure(activebackground="#f9f9f9")

        self.led5Front = tk.Label(self.linestatusLabelframe)
        self.led5Front.place(relx=0.554, rely=0.242, height=25, width=29
                , bordermode='ignore')
        self.led5Front.configure(activebackground="#f9f9f9")

        self.led6Front = tk.Label(self.linestatusLabelframe)
        self.led6Front.place(relx=0.643, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.led6Front.configure(activebackground="#f9f9f9")

        self.led7Front = tk.Label(self.linestatusLabelframe)
        self.led7Front.place(relx=0.731, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.led7Front.configure(activebackground="#f9f9f9")

        self.led8Front = tk.Label(self.linestatusLabelframe)
        self.led8Front.place(relx=0.818, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.led8Front.configure(activebackground="#f9f9f9")

        self.Label2 = tk.Label(self.linestatusLabelframe)
        self.Label2.place(relx=0.025, rely=0.182, height=51, width=60
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(background="#FFC13C")
        self.Label2.configure(foreground="#673119")
        self.Label2.configure(text='''FRONT''')

        self.Label10 = tk.Label(self.linestatusLabelframe)
        self.Label10.place(relx=0.025, rely=0.612, height=51, width=60
                , bordermode='ignore')
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(background="#FFC13C")
        self.Label10.configure(foreground="#673119")
        self.Label10.configure(text='''BACK''')

        self.led1Back = tk.Label(self.linestatusLabelframe)
        self.led1Back.place(relx=0.2, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led1Back.configure(activebackground="#f9f9f9")

        self.led3Back = tk.Label(self.linestatusLabelframe)
        self.led3Back.place(relx=0.374, rely=0.709, height=25, width=29
                , bordermode='ignore')
        self.led3Back.configure(activebackground="#f9f9f9")

        self.led6Back = tk.Label(self.linestatusLabelframe)
        self.led6Back.place(relx=0.643, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led6Back.configure(activebackground="#f9f9f9")

        self.led7Back = tk.Label(self.linestatusLabelframe)
        self.led7Back.place(relx=0.736, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led7Back.configure(activebackground="#f9f9f9")

        self.led2Back = tk.Label(self.linestatusLabelframe)
        self.led2Back.place(relx=0.287, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led2Back.configure(activebackground="#f9f9f9")

        self.Label16 = tk.Label(self.linestatusLabelframe)
        self.Label16.place(relx=1.82, rely=0.242, height=26, width=29
                , bordermode='ignore')
        self.Label16.configure(activebackground="#f9f9f9")

        self.led4Back = tk.Label(self.linestatusLabelframe)
        self.led4Back.place(relx=0.459, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led4Back.configure(activebackground="#f9f9f9")

        self.led5Back = tk.Label(self.linestatusLabelframe)
        self.led5Back.place(relx=0.549, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led5Back.configure(activebackground="#f9f9f9")

        self.led8Back = tk.Label(self.linestatusLabelframe)
        self.led8Back.place(relx=0.823, rely=0.709, height=26, width=29
                , bordermode='ignore')
        self.led8Back.configure(activebackground="#f9f9f9")

        self.hallinputLabelframe = tk.LabelFrame(top)
        self.hallinputLabelframe.place(relx=0.667, rely=0.088, relheight=0.365
                , relwidth=0.299)
        self.hallinputLabelframe.configure(relief='groove')
        self.hallinputLabelframe.configure(font="-family {DejaVu Sans} -size 13")
        self.hallinputLabelframe.configure(foreground="#ffffff")
        self.hallinputLabelframe.configure(text='''HALL INPUT''')
        self.hallinputLabelframe.configure(background="#4a171e")

        self.Label19 = tk.Label(self.hallinputLabelframe)
        self.Label19.place(relx=-0.636, rely=0.614, height=51, width=60
                , bordermode='ignore')
        self.Label19.configure(activebackground="#f9f9f9")
        self.Label19.configure(text='''RIGHT''')

        self.ledRight = tk.Label(self.hallinputLabelframe)
        self.ledRight.place(relx=0.455, rely=0.307, height=25, width=29
                , bordermode='ignore')
        self.ledRight.configure(activebackground="#f9f9f9")

        self.Label21 = tk.Label(self.hallinputLabelframe)
        self.Label21.place(relx=0.091, rely=0.614, height=51, width=60
                , bordermode='ignore')
        self.Label21.configure(activebackground="#f9f9f9")
        self.Label21.configure(background="#FFC13C")
        self.Label21.configure(foreground="#673119")
        self.Label21.configure(text='''LEFT''')

        self.ledLeft = tk.Label(self.hallinputLabelframe)
        self.ledLeft.place(relx=0.455, rely=0.675, height=25, width=29
                , bordermode='ignore')
        self.ledLeft.configure(activebackground="#f9f9f9")

        self.Label24 = tk.Label(self.hallinputLabelframe)
        self.Label24.place(relx=0.091, rely=0.247, height=51, width=60
                , bordermode='ignore')
        self.Label24.configure(activebackground="#f9f9f9")
        self.Label24.configure(background="#FFC13C")
        self.Label24.configure(foreground="#673119")
        self.Label24.configure(text='''RIGHT''')

        self.exitButton = tk.Button(top)
        self.exitButton.place(relx=0.857, rely=0.857, height=51, width=71)
        self.exitButton.configure(activebackground="#f9f9f9")
        self.exitButton.configure(background="#D2302C")
        self.exitButton.configure(command=peripheral_support.quit)
        self.exitButton.configure(foreground="#f7f7f9")
        self.exitButton.configure(text='''EXIT''')

    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = tk.Menu(root, tearoff=0)
        Popupmenu1.post(event.x_root, event.y_root)

if __name__ == '__main__':
    vp_start_gui()





