#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Oct 16, 2020 06:39:44 AM GMT  platform: Windows NT
#    Oct 16, 2020 09:04:59 AM GMT  platform: Windows NT
#    Oct 16, 2020 09:26:05 AM GMT  platform: Windows NT
#    Oct 19, 2020 01:41:52 AM GMT  platform: Windows NT
#    Oct 19, 2020 02:29:19 AM GMT  platform: Windows NT
#    Oct 19, 2020 02:40:26 AM GMT  platform: Windows NT
import psutil
import sys
from tkinter import messagebox
from datetime import datetime
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

    update_clock()
    
    sys.stdout.flush()

   
    
def engSetting():
    #print('main_support.engSetting')
    w.settingButton.configure(text='''SETTING''')
    w.showButton.configure(text='''INFORMATION''')
    w.peripheralButton.configure(text='''PERIPHERAL''')
    w.selectLanguage.configure(text='''SELECT LANGUAGE''')
    w.selectOption.configure(text='''SELECT OPTION''')
    w.exitButton.configure(text='''EXIT''')


    sys.stdout.flush()

def vietSetting():
    #print('main_support.vietSetting')
    w.settingButton.configure(text='''CÀI ĐẶT''')
    w.showButton.configure(text='''THÔNG TIN''')
    w.peripheralButton.configure(text='''NGOẠI VI''')
    w.selectLanguage.configure(text='''CHỌN NGÔN NGỮ''')
    w.selectOption.configure(text='''TÙY CHỌN''')
    w.exitButton.configure(text='''THOÁT''')

  
    sys.stdout.flush()

def setting():
    #print('main_support.setting')
    sys.stdout.flush()
    


    import login
    login.create_LOGIN(root)
   
   
def show():
    #print('main_support.show')


    sys.stdout.flush()
    import selectInformation
    selectInformation.create_SELECTINFORMATION(root)
def peripheral():
    #print('main_support.peripheral')
 

    sys.stdout.flush()

def quit():
    #print('main_support.quit')
   
   
    MsgBox=tk.messagebox.askquestion ('Exit Application','Are you sure you want to exit the application',icon = 'warning')
    
    if MsgBox == 'yes':
       exit()
    else:
        tk.messagebox.showinfo('Return','You will now return to the application screen')
    
    sys.stdout.flush()

    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None
def update_clock():
    now = datetime.now()
    dt_string = now.strftime("%d/%m/%Y %H:%M:%S")
    
    w.timeLabel.configure(text=dt_string)
    root.after(1000,update_clock)

    
if __name__ == '__main__':
    import main
    main.vp_start_gui()
    





